name: "Helm lint and tests"
on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  REGISTRY: ghcr.io

jobs:
  helm-lint-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0

      - uses: actions/setup-python@v5
        with:
          python-version: 3.9
          check-latest: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up chart-linting and chart-testing
        uses: helm/chart-testing-action@v2.7.0

      - name: Run chart-linting (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --config .github/configs/helm-lint.yaml --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Run chart-linting
        if: steps.list-changed.outputs.changed == 'true'
        run: ct lint --config .github/configs/helm-lint.yaml --target-branch ${{ github.event.repository.default_branch }}

      - name: Run chart-testing (list-changed)
        id: chart-test-list-changed
        run: |
          changed=$(ct list-changed --config .github/configs/helm-test.yaml --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Create kind cluster
        if: steps.chart-test-list-changed.outputs.changed == 'true'
        uses: helm/kind-action@v1.12.0

      - name: Run chart integration tests
        if: steps.chart-test-list-changed.outputs.changed == 'true'
        run: ct install --config .github/configs/helm-test.yaml

      - name: Check version bump
        id: check-bump
        if: steps.list-changed.outputs.changed == 'true'
        continue-on-error: true
        run: |
          for chart in $(ct list-changed --config .github/configs/helm-lint.yaml --target-branch ${{ github.event.repository.default_branch }}); do
            chart_version=$(yq .version "$chart/Chart.yaml")
            if helm pull "oci://${{ env.REGISTRY }}/${{ github.repository }}/charts/$(dirname $chart)" --version $chart_version; then
              echo "chart=$(dirname $chart)" >> "$GITHUB_OUTPUT"
              echo "chart_version=${chart_version}" >> "$GITHUB_OUTPUT"
              echo "needsbump=true" >> "$GITHUB_OUTPUT"
            fi
          done

      - uses: actions/github-script@v7
        if: steps.check-bump.outputs.needsbump == 'true'
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: ':warning: Chart `oci://${{ env.REGISTRY }}/${{ github.repository }}/charts/${{ steps.check-bump.outputs.chart }}:${{ steps.check-bump.outputs.chart_version }}` already exists in OCI registry. Please increment the chart version.'
            })
            core.setFailed(`Action failed with error: Chart version bump required`);

      # Detect changes in Chart.yaml or values.yaml
      # Debug: List changed files
      - name: Debug - List changed files
        run: |
          echo "Listing changed files:"
          git diff --name-only origin/${{ github.event.repository.default_branch }}

      # Detect changes in Chart.yaml or values.yaml
      - name: Check for Chart.yaml or values.yaml changes
        id: check-doc-changes
        run: |
          echo "Checking for changes in Chart.yaml or values.yaml..."
          changed_charts=$(ct list-changed --config .github/configs/helm-lint.yaml --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed_charts" ]]; then
            echo "Charts that changed: $changed_charts"
            echo "docs_update_needed=true" >> "$GITHUB_OUTPUT"
            echo "changed_charts=$changed_charts" >> "$GITHUB_OUTPUT"
          else
            echo "No changes detected in Chart.yaml or values.yaml."
            echo "docs_update_needed=false" >> "$GITHUB_OUTPUT"
          fi

      # Debug: Output changed charts
      - name: Debug - Output changed charts
        run: |
          echo "docs_update_needed=${{ steps.check-doc-changes.outputs.docs_update_needed }}"
          echo "changed_charts=${{ steps.check-doc-changes.outputs.changed_charts }}"

      # Generate README.md using helm-docs (Docker version)
      - name: Generate README.md using helm-docs
        if: steps.check-doc-changes.outputs.docs_update_needed == 'true'
        run: |
          echo "Generating README.md using helm-docs..."
          docker run --rm --volume "$(pwd):/helm-docs" -u $(id -u) jnorwood/helm-docs:latest
          echo "README.md generation completed."

      # Debug: Check if README.md files were updated
      - name: Debug - List updated README.md files
        if: steps.check-doc-changes.outputs.docs_update_needed == 'true'
        run: |
          echo "Checking for modified README.md files..."
          git status --short | grep README.md || echo "No README changes detected."

      # Commit README updates with correct paths
      - name: Commit README changes
        uses: EndBug/add-and-commit@v9
        if: steps.check-doc-changes.outputs.docs_update_needed == 'true'
        with:
          message: "docs: update README.md based on changes in Chart.yaml or values.yaml"
          add: ${{ steps.check-doc-changes.outputs.changed_charts }}/README.md
          push: true
